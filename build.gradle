plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.beryx.jlink' version '2.26.0'
}

group 'net.cassite'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.8.2'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'net.cassite.hottapcassistant'
    mainClass = 'net.cassite.hottapcassistant.Main'
}

javafx {
    version = '17.0.1'
    modules = ['javafx.controls', 'javafx.swing', 'javafx.media']
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    //noinspection DifferentStdlibGradleVersion, GradlePackageUpdate
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.5.31"
    implementation 'com.github.kwhat:jnativehook:2.2.2'
    implementation group: 'io.vproxy', name: 'commons', version: '0.0.1'
    implementation group: 'io.vproxy', name: 'vfx', version: '1.3.0'
    implementation group: 'net.java.dev.jna', name: 'jna', version: '5.12.1'
    implementation group: 'net.java.dev.jna', name: 'jna-platform', version: '5.12.1'
    implementation group: 'io.vertx', name: 'vertx-core', version: '4.3.7'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.36'
    implementation group: 'io.projectreactor.tools', name: 'blockhound', version: '1.0.6.RELEASE'
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/幻塔PC助手-${javafx.platform.classifier}.zip")
    options = ['--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
        jvmArgs = ['-Xmx320m', '-Djava.library.path=%TEMP%', '-Dio.vproxy.vfx.logLevel=INFO']
        noConsole = true
    }
    mergedModule {
        additive = true
        uses 'io.vertx.core.spi.VertxServiceProvider'
        uses 'io.vertx.core.spi.VerticleFactory'
        uses 'io.vertx.core.spi.JsonFactory'
        uses 'io.vertx.core.spi.launcher.CommandFactory'
    }
    forceMerge 'kotlin'
}

tasks.jlinkZip.doFirst {
    copy {
        from("docs") {
            include "如何运行-How-to-Run.txt"
        }
        from("misc") {
            include "launch.bat"
        }
        into "${buildDir}/image/"
    }
}

jlinkZip {
    group = 'distribution'
}

task runTest(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "net.cassite.hottapcassistant.test.TestMain"
    systemProperty("IsDebug", System.getProperty("IsDebug", "false"))
    args = ["net.cassite.hottapcassistant.test." + System.getProperty("TestClass")]
}
